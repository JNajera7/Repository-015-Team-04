<div style="display: flex;">
  <div style="width: 200px; padding-left: 19px;">
    <h2>Delete Page</h2>
    <h2>Filter by Attributes</h2>
    <h3>Clothing Pieces</h3>
    <!-- Filters and Subfilters that appear when the main filter is clicked on -->
    <div>
      <input type="checkbox" id="filter-tops" class="filter-checkbox" onchange="toggleSubcategoryFilters('tops'); filterItems()"> Tops<br>
      <div id="subcategory-filters-tops" style="display: none; margin-left: 20px;">
        <input type="checkbox" id="filter-short-sleeve" class="filter-checkbox" onchange="toggleSubcategoryFilters()"> Short Sleeve<br>
        <input type="checkbox" id="filter-long-sleeve" class="filter-checkbox" onchange="toggleSubcategoryFilters()"> Long Sleeve<br>
        <input type="checkbox" id="filter-sweater" class="filter-checkbox" onchange="toggleSubcategoryFilters()"> Sweater<br>
      </div>
      <input type="checkbox" id="filter-bottoms" class="filter-checkbox" onchange="toggleSubcategoryFilters('bottoms'); filterItems()"> Bottoms<br>
      <div id="subcategory-filters-bottoms" style="display: none; margin-left: 20px;">
        <input type="checkbox" id="filter-short-pants" class="filter-checkbox" onchange="filterItems()"> Short pants<br>
        <input type="checkbox" id="filter-long-pants" class="filter-checkbox" onchange="filterItems()"> Long pants<br>
        <input type="checkbox" id="filter-skirts" class="filter-checkbox" onchange="filterItems()"> Skirts<br>
    </div>
    <input type="checkbox" id="filter-fullbody" class="filter-checkbox" onchange="toggleSubcategoryFilters('fullbody'); filterItems()"> Full Body<br>
    <div id="subcategory-filters-fullbody" style="display: none; margin-left: 20px;">
      <input type="checkbox" id="filter-one-piece" class="filter-checkbox" onchange="filterItems()"> One piece<br>
      <input type="checkbox" id="filter-dresses" class="filter-checkbox" onchange="filterItems()"> Dresses<br>
    </div>
    <input type="checkbox" id="filter-footwear" class="filter-checkbox" onchange="toggleSubcategoryFilters('footwear'); filterItems()"> Footwear<br>
    <div id="subcategory-filters-footwear" style="display: none; margin-left: 20px;">
      <input type="checkbox" id="filter-sneakers" class="filter-checkbox" onchange="filterItems()"> Sneakers<br>
      <input type="checkbox" id="filter-boots" class="filter-checkbox" onchange="filterItems()"> Boots<br>
      <input type="checkbox" id="filter-heels" class="filter-checkbox" onchange="filterItems()"> Heels<br>
    </div>
    <input type="checkbox" id="filter-accessories" class="filter-checkbox" onchange="toggleSubcategoryFilters('accessories'); filterItems()"> Accessories<br>
    <div id="subcategory-filters-accessories" style="display: none; margin-left: 20px;">
      <input type="checkbox" id="filter-jewelry" class="filter-checkbox" onchange="filterItems()"> Jewelry<br>
      <input type="checkbox" id="filter-headwear-accessories" class="filter-checkbox" onchange="filterItems()"> Headwear<br>
      <input type="checkbox" id="filter-eyewear" class="filter-checkbox" onchange="filterItems()"> Eyewear<br>
    </div>
    <input type="checkbox" id="filter-outerwear" class="filter-checkbox" onchange="toggleSubcategoryFilters('outerwear'); filterItems()"> Outerwear<br>
    <div id="subcategory-filters-outerwear" style="display: none; margin-left: 20px;">
      <input type="checkbox" id="filter-coats" class="filter-checkbox" onchange="filterItems()"> Coats<br>
      <input type="checkbox" id="filter-vest" class="filter-checkbox" onchange="filterItems()"> Vest<br>
      <input type="checkbox" id="filter-jacket" class="filter-checkbox" onchange="filterItems()"> Jacket<br>
    </div>
  <h3>Descriptions</h3>
    <input type="checkbox" id="filter-styles" class="filter-checkbox" onchange="toggleSubcategoryFilters('styles'); filterItems()"> Styles<br>
    <div id="subcategory-filters-styles"style="display: none; margin-left: 20px;">
      <input type="checkbox" id="filter-formal" class="filter-checkbox" onchange="filterItems()"> Formal<br>
      <input type="checkbox" id="filter-casual" class="filter-checkbox" onchange="filterItems()"> Casual<br>
      <input type="checkbox" id="filter-office" class="filter-checkbox" onchange="filterItems()"> Office<br>
      <input type="checkbox" id="filter-athletic" class="filter-checkbox" onchange="filterItems()"> Athletic<br>
      <input type="checkbox" id="filter-party" class="filter-checkbox" onchange="filterItems()"> Party<br>
      <input type="checkbox" id="filter-fancy" class="filter-checkbox" onchange="filterItems()"> Fancy<br>
      <input type="checkbox" id="filter-Hot" class="filter-checkbox" onchange="filterItems()"> Hot<br>
      <input type="checkbox" id="filter-rain" class="filter-checkbox" onchange="filterItems()"> Rain<br>
      <input type="checkbox" id="filter-Snow" class="filter-checkbox" onchange="filterItems()"> Sportswear<br>
    </div>
    <input type="checkbox" id="filter-colors" class="filter-checkbox" onchange="toggleSubcategoryFilters('colors'); filterItems()"> Colors<br>
    <div id="subcategory-filters-colors"style="display: none; margin-left: 20px;">
      <input type="checkbox" id="filter-red" class="filter-checkbox" onchange="filterItems()"> Red<br>
      <input type="checkbox" id="filter-orange" class="filter-checkbox" onchange="filterItems()"> Orange<br>
      <input type="checkbox" id="filter-yellow" class="filter-checkbox" onchange="filterItems()"> Yellow<br>
      <input type="checkbox" id="filter-green" class="filter-checkbox" onchange="filterItems()"> Green<br>
      <input type="checkbox" id="filter-blue" class="filter-checkbox" onchange="filterItems()"> Blue<br>
      <input type="checkbox" id="filter-indigo" class="filter-checkbox" onchange="filterItems()"> Indigo<br>
      <input type="checkbox" id="filter-black" class="filter-checkbox" onchange="filterItems()"> Black<br>
      <input type="checkbox" id="filter-white" class="filter-checkbox" onchange="filterItems()"> White<br>
      <input type="checkbox" id="filter-pink" class="filter-checkbox" onchange="filterItems()"> Pink<br>
      <input type="checkbox" id="filter-brown" class="filter-checkbox" onchange="filterItems()"> Brown<br>
    </div>
        <input type="checkbox" id="filter-patterns" class="filter-checkbox" onchange="toggleSubcategoryFilters('patterns'); filterItems()"> Patterns
    <br>
    <div id="subcategory-filters-patterns"style="display: none; margin-left: 20px;">
      <input type="checkbox" id="filter-solid" class="filter-checkbox" onchange="filterItems()"> solid<br>
      <input type="checkbox" id="filter-plaid" class="filter-checkbox" onchange="filterItems()"> plaid<br>
      <input type="checkbox" id="filter-striped" class="filter-checkbox" onchange="filterItems()"> striped<br>
      <input type="checkbox" id="filter-polkadot" class="filter-checkbox" onchange="filterItems()"> polka dot<br>
      <input type="checkbox" id="filter-graphic" class="filter-checkbox" onchange="filterItems()"> graphic<br>
      <input type="checkbox" id="filter-camo" class="filter-checkbox" onchange="filterItems()"> camo
      <br>
    </div>
  </div>
    <button onclick="deleteItems()">Delete Selected Items</button>
  </div>

<div class="container p-0 m-0 mt-5" style="flex-grow: 1; display: flex;">
  <div style="width: 1245px; max-height: flex; overflow-y: auto; border-right: 2px solid black;">
    <h1>Image Gallery</h1>
    <div id="itemList" style="height: 500px; overflow-y: auto; display: flex; flex-wrap: wrap;">
      {{#each images}}
      <div class="image-item">
        <div class="image-container">
          <img class="m-3" style="width: 200px; max-height: 200px; display:inline-block; border: 2px solid #c1c1c1;" src="/uploads/{{imgfile}}">
        </div>
      </div>
      {{/each}}
    </div>
  </div>
</div>

<style> 
 .highlight { /* Highlights which Image has been selected */
  background-color: yellow;
  border: 2px solid red;
}

.image-container {
  width: 200px;
  height: 200px;
  margin: 5px;
  border: 2px solid #c1c1c1;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.image-container.highlight {
  background-color: yellow;
  border: 2px solid red;
}

.image-container img {
  width: 100%;
  height: 100%;
}
</style>

<script>
function filterItems() {
  // Get all the filter checkboxes
  var checkboxes = document.getElementsByClassName('filter-checkbox');
  
  // Create an object to store the selected filters
  var selectedFilters = {};
  
  // Loop through the checkboxes
  for (var i = 0; i < checkboxes.length; i++) {
    var checkbox = checkboxes[i];
    
    // Check if the checkbox is checked
    if (checkbox.checked) {
      // Get the filter category and subcategory
      var filterCategory = checkbox.id.split('-')[1];
      var filterSubcategory = checkbox.id.split('-')[2];
      
      // Check if the filter category already exists in the selectedFilters object
      if (!selectedFilters.hasOwnProperty(filterCategory)) {
        selectedFilters[filterCategory] = [];
      }
      
      // Add the filter subcategory to the selectedFilters object
      if (filterSubcategory) {
        selectedFilters[filterCategory].push(filterSubcategory);
      }
    }
  }
  
  // Perform filtering based on the selected filters
  var imageItems = document.getElementsByClassName('image-item');
  
  for (var i = 0; i < imageItems.length; i++) {
    var imageItem = imageItems[i];
    
    // Check if the image item matches the selected filters
    var matchesFilters = true;
    
    for (var category in selectedFilters) {
      if (selectedFilters.hasOwnProperty(category)) {
        var subcategories = selectedFilters[category];
        
        // Check if the image item has the selected subcategory
        var hasSubcategory = false;
        
        if (subcategories.length > 0) {
          var subcategoryFilters = document.getElementById('subcategory-filters-' + category).getElementsByTagName('input');
          
          for (var j = 0; j < subcategoryFilters.length; j++) {
            var subcategoryFilter = subcategoryFilters[j];
            
            if (subcategoryFilter.checked && subcategories.includes(subcategoryFilter.id.split('-')[1])) {
              hasSubcategory = true;
              break;
            }
          }
        }
        
        // If the image item doesn't have the selected subcategory, it doesn't match the filters
        if (!hasSubcategory) {
          matchesFilters = false;
          break;
        }
      }
    }
    
    // Show or hide the image item based on whether it matches the filters
    imageItem.style.display = matchesFilters ? 'block' : 'none';
  }
}

// Function to toggle the subcategory filters
function toggleSubcategoryFilters(category) {
  var subcategoryFilters = document.getElementById("subcategory-filters-" + category);
  var mainFilter = document.getElementById("filter-" + category);

  if (mainFilter.checked) {
    // Enable the subcategory filters
    subcategoryFilters.style.display = "block";

    // Automatically check the subcategory filters
    var subcategoryCheckboxes = subcategoryFilters.getElementsByTagName("input");
    for (var i = 0; i < subcategoryCheckboxes.length; i++) {
      subcategoryCheckboxes[i].checked = true;
    }
  } else {
    // Disable and uncheck the subcategory filters
    subcategoryFilters.style.display = "none";
    var subcategoryCheckboxes = subcategoryFilters.getElementsByTagName("input");
    for (var i = 0; i < subcategoryCheckboxes.length; i++) {
      subcategoryCheckboxes[i].checked = false;
    }
  }
}

function toggleHighlight(item) {
  item.classList.toggle("highlight");
}

function deleteItems() {
  var selectedItems = document.querySelectorAll(".highlight");
  selectedItems.forEach(function (item) {
    // Get the image file name from the selected item
    var imageFileName = item.getAttribute("src");

    // Make a request to the server to delete the image
    fetch('/delete/' + imageFileName, {
      method: 'POST'
    })
    .then(response => response.json())
    .then(data => {
      // Log the response from the server
      console.log(data);
    })
    .catch(error => {
      // Handle the error
      console.error('Error:', error);
    });

    // Remove the item from the DOM
    item.remove();
  });
}

// Add event listeners to the image items
var imageItems = document.getElementsByClassName('image-item');
for (var i = 0; i < imageItems.length; i++) {
  var imageItem = imageItems[i];

  // Add click event listener to toggle highlighting
  imageItem.addEventListener('click', function () {
    toggleHighlight(this);
  });
}
</script>